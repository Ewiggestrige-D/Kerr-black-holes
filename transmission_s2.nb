(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     84310,       2006]
NotebookOptionsPosition[     83910,       1988]
NotebookOutlinePosition[     84243,       2003]
CellTagsIndexPosition[     84200,       2000]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
  "Needs", "[", "\"\<DifferentialEquations`NDSolveProblems`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Needs", "[", "\"\<DifferentialEquations`NDSolveUtilities`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Needs", "[", "\"\<FunctionApproximations`\>\"", "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "k", ",", "s", ",", "m", ",", "\[Lambda]", ",", "A", ",", "B", ",", "Rhor",
     ",", "L", ",", "a", ",", "rp", ",", "rm", ",", "kH", ",", "Omega", ",", 
    "Mw", ",", "M", ",", "astar", ",", "w", ",", "apb", ",", "amb", ",", "H", 
    ",", "f0", ",", "f1", ",", "f2", ",", "f3", ",", "f4", ",", "f5", ",", 
    "f6", ",", "term1", ",", "term2", ",", "term3", ",", "Elm", ",", 
    "\[Lambda]0", ",", "QQ", ",", "CC", ",", "\[Epsilon]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"-", "2"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"**", "**", "**", "**", "**", "**", "**", "**"}], "*", " ", 
          "Common", " ", "prameters"}], " ", "**"}], "**"}], "**"}], "**"}], 
     "**"}], "**"}], "*************)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rp", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"rp", "/", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"1", "-", 
        RowBox[{"astar", "^", "2"}]}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"M", "*", "astar"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kH", "=", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"2", "*", "M", "*", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"astar", "^", "2"}]}], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}], ")"}]}]}], ")"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Omega", "=", 
    RowBox[{"astar", "/", 
     RowBox[{"(", 
      RowBox[{"2", "*", "M", "*", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"astar", "^", "2"}]}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"1", "/", "2"}], ")"}]}]}], ")"}]}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"m", "=", 
    RowBox[{"2", "+", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "17"}], ")"}]}]}]}], ";"}],
  FontColor->RGBColor[1, 0, 1]], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"L", "=", 
     RowBox[{"2", "+", 
      RowBox[{"10", "^", 
       RowBox[{"(", 
        RowBox[{"-", "17"}], ")"}]}]}]}], ";"}],
   FontColor->RGBColor[1, 0, 1]], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"astarmax", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mmax", "=", 
   RowBox[{"rp", "/", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"1", "-", 
        RowBox[{"astarmax", "^", "2"}]}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Omegamax", "=", 
    RowBox[{"astarmax", "/", 
     RowBox[{"(", 
      RowBox[{"2", "*", "Mmax", "*", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"astarmax", "^", "2"}]}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"1", "/", "2"}], ")"}]}]}], ")"}]}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"astar", "=", "0.5"}], ";"}],
  FontColor->RGBColor[1, 0, 1]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"startw", "=", 
    RowBox[{"0.01", "*", "m", "*", "Mmax", "*", "Omegamax"}]}], ";"}],
  FontColor->RGBColor[1, 0, 1]], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"Nw", "=", "110"}], ";"}],
   FontColor->RGBColor[1, 0, 1]], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  StyleBox[
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**", "**", "**", "**", "**"}], "*", 
     StyleBox[
      RowBox[{" ", " "}]], "precision", " ", "parameters"}], "  ", 
    StyleBox[
     RowBox[{"***************************", ")"}]]}],
   FontColor->RGBColor[1, 0, 1]]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"dMw", "=", 
    RowBox[{"0.01", "*", "m", "*", "Mmax", "*", "Omegamax"}]}], ";"}],
  FontColor->RGBColor[1, 0, 1]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"r0", "=", 
    RowBox[{"1", "+", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "4"}], ")"}]}]}]}], ";"}],
  FontColor->RGBColor[1, 0, 1]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"startstep", "=", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "6"}], ")"}]}]}], ";"}],
  FontColor->RGBColor[1, 0, 1]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"rmax", "=", "1000"}], ";"}],
  FontColor->RGBColor[1, 0, 1]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"stepmax", "=", "1"}], ";"}],
  FontColor->RGBColor[1, 0, 1]], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotrmax", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numsteps", "=", "Infinity"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"**", "**"}], "**"}], "**"}], "**"}], "**", "**", "**",
              "  ", "angular"}], " ", "eigenvalues", " ", "Elm"}], " ", 
           "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
   "*******)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mm", ":=", "m"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"apb", ":=", 
    RowBox[{"Max", "[", 
     RowBox[{
      RowBox[{"Abs", "[", "mm", "]"}], ",", 
      RowBox[{"Abs", "[", "s", "]"}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"amb", ":=", 
    RowBox[{"mm", "*", 
     RowBox[{"s", "/", "apb"}]}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"H", "[", "L_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"L", "^", "2"}], "-", 
      RowBox[{"apb", "^", "2"}]}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"L", "^", "2"}], "-", 
      RowBox[{"s", "^", "2"}]}], ")"}], "*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"L", "^", "2"}], "-", 
          RowBox[{"amb", "^", "2"}]}], ")"}], "/", "2"}], "/", 
       RowBox[{"(", 
        RowBox[{"L", "-", 
         RowBox[{"1", "/", "2"}]}], ")"}]}], "/", 
      RowBox[{"L", "^", "3"}]}], "/", 
     RowBox[{"(", 
      RowBox[{"L", "+", 
       RowBox[{"1", "/", "2"}]}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f0", ":=", 
   RowBox[{"L", "*", 
    RowBox[{"(", 
     RowBox[{"L", "+", "1"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f1", ":=", 
   RowBox[{
    RowBox[{"-", "2"}], "*", 
    RowBox[{"s", "^", "2"}], "*", 
    RowBox[{
     RowBox[{"mm", "/", "L"}], "/", 
     RowBox[{"(", 
      RowBox[{"L", "+", "1"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", ":=", 
   RowBox[{
    RowBox[{"H", "[", 
     RowBox[{"L", "+", "1"}], "]"}], "-", 
    RowBox[{"H", "[", "L", "]"}], "-", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f3", ":=", 
   RowBox[{"2", "*", 
    RowBox[{"s", "^", "2"}], "*", "mm", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"H", "[", "L", "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"L", "-", "1"}], ")"}]}], "/", 
        RowBox[{"L", "^", "2"}]}], "/", 
       RowBox[{"(", 
        RowBox[{"L", "+", "1"}], ")"}]}], "-", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"H", "[", 
          RowBox[{"L", "+", "1"}], "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"L", "+", "2"}], ")"}]}], "/", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"L", "+", "1"}], ")"}], "^", "2"}]}], "/", "L"}]}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f4", ":=", 
    RowBox[{
     RowBox[{"4", "*", 
      RowBox[{"s", "^", "4"}], "*", 
      RowBox[{"mm", "^", "2"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"H", "[", 
            RowBox[{"L", "+", "1"}], "]"}], "/", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"L", "+", "2"}], ")"}], "^", "2"}]}], "/", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"L", "+", "1"}], ")"}], "^", "4"}]}], "/", 
         RowBox[{"L", "^", "2"}]}], "-", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"H", "[", "L", "]"}], "/", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"L", "-", "1"}], ")"}], "^", "2"}]}], "/", 
          RowBox[{"L", "^", "4"}]}], "/", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"L", "+", "1"}], ")"}], "^", "2"}]}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"1", "/", "2"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"H", "[", 
           RowBox[{"L", "+", "1"}], "]"}], "^", "2"}], "/", 
         RowBox[{"(", 
          RowBox[{"L", "+", "1"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"H", "[", 
          RowBox[{"L", "+", "1"}], "]"}], "*", 
         RowBox[{
          RowBox[{
           RowBox[{"H", "[", "L", "]"}], "/", 
           RowBox[{"(", 
            RowBox[{"L", "+", "1"}], ")"}]}], "/", "L"}]}], "-", 
        RowBox[{
         RowBox[{
          RowBox[{"H", "[", "L", "]"}], "^", "2"}], "/", "L"}]}], ")"}]}], 
     "+", 
     RowBox[{
      RowBox[{"1", "/", "4"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"L", "-", "1"}], ")"}], "*", 
         RowBox[{"H", "[", "L", "]"}], "*", 
         RowBox[{
          RowBox[{
           RowBox[{"H", "[", 
            RowBox[{"L", "-", "1"}], "]"}], "/", "L"}], "/", 
          RowBox[{"(", 
           RowBox[{"L", "-", 
            RowBox[{"1", "/", "2"}]}], ")"}]}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"L", "+", "2"}], ")"}], "*", 
         RowBox[{"H", "[", 
          RowBox[{"L", "+", "1"}], "]"}], "*", 
         RowBox[{
          RowBox[{
           RowBox[{"H", "[", 
            RowBox[{"L", "+", "2"}], "]"}], "/", 
           RowBox[{"(", 
            RowBox[{"L", "+", "1"}], ")"}]}], "/", 
          RowBox[{"(", 
           RowBox[{"L", "+", 
            RowBox[{"3", "/", "2"}]}], ")"}]}]}]}], ")"}]}]}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f5", ":=", 
    RowBox[{
     RowBox[{"8", "*", 
      RowBox[{"s", "^", "6"}], "*", 
      RowBox[{"mm", "^", "3"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"H", "[", "L", "]"}], "/", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"L", "-", "1"}], ")"}], "^", "3"}]}], "/", 
          RowBox[{"L", "^", "6"}]}], "/", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"L", "+", "1"}], ")"}], "^", "3"}]}], "-", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"H", "[", 
            RowBox[{"L", "+", "1"}], "]"}], "/", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"L", "+", "2"}], ")"}], "^", "3"}]}], "/", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"L", "+", "1"}], ")"}], "^", "6"}]}], "/", 
         RowBox[{"L", "^", "3"}]}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"s", "^", "2"}], "*", "mm", "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", "*", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"H", "[", "L", "]"}], "^", "2"}], "/", 
            RowBox[{"(", 
             RowBox[{"L", "-", "1"}], ")"}]}], "/", 
           RowBox[{"L", "^", "3"}]}], "/", 
          RowBox[{"(", 
           RowBox[{"L", "+", "1"}], ")"}]}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"7", "*", 
            RowBox[{"L", "^", "2"}]}], "+", 
           RowBox[{"7", "*", "L"}], "+", "4"}], ")"}], "*", 
         RowBox[{"H", "[", "L", "]"}], "*", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"H", "[", 
              RowBox[{"L", "+", "1"}], "]"}], "/", 
             RowBox[{"(", 
              RowBox[{"L", "-", "1"}], ")"}]}], "/", 
            RowBox[{"L", "^", "3"}]}], "/", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"L", "+", "1"}], ")"}], "^", "3"}]}], "/", 
          RowBox[{"(", 
           RowBox[{"L", "+", "2"}], ")"}]}]}], "-", 
        RowBox[{"3", "*", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"H", "[", 
              RowBox[{"L", "+", "1"}], "]"}], "^", "2"}], "/", 
            RowBox[{"(", 
             RowBox[{"L", "+", "2"}], ")"}]}], "/", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"L", "+", "1"}], ")"}], "^", "3"}]}], "/", "L"}]}], "+", 
        
        RowBox[{
         RowBox[{"1", "/", "2"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"3", "*", "L"}], "+", "7"}], ")"}], "*", 
            RowBox[{"H", "[", 
             RowBox[{"L", "+", "1"}], "]"}], "*", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"H", "[", 
                 RowBox[{"L", "+", "2"}], "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{"L", "+", "3"}], ")"}]}], "/", 
               RowBox[{"(", 
                RowBox[{"L", "+", 
                 RowBox[{"3", "/", "2"}]}], ")"}]}], "/", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"L", "+", "1"}], ")"}], "^", "3"}]}], "/", "L"}]}], 
           "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"3", "*", "L"}], "-", "4"}], ")"}], "*", 
            RowBox[{"H", "[", "L", "]"}], "*", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"H", "[", 
                 RowBox[{"L", "-", "1"}], "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{"L", "-", "2"}], ")"}]}], "/", 
               RowBox[{"(", 
                RowBox[{"L", "-", 
                 RowBox[{"1", "/", "2"}]}], ")"}]}], "/", 
              RowBox[{"L", "^", "3"}]}], "/", 
             RowBox[{"(", 
              RowBox[{"L", "+", "1"}], ")"}]}]}]}], ")"}]}]}], ")"}]}]}]}], 
   ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"term1", ":=", 
   RowBox[{"16", "*", 
    RowBox[{"s", "^", "8"}], "*", 
    RowBox[{"mm", "^", "4"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"H", "[", 
          RowBox[{"L", "+", "1"}], "]"}], "/", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"L", "+", "2"}], ")"}], "^", "4"}]}], "/", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"L", "+", "1"}], ")"}], "^", "8"}]}], "/", 
       RowBox[{"L", "^", "4"}]}], "-", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"H", "[", "L", "]"}], "/", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"L", "-", "1"}], ")"}], "^", "4"}]}], "/", 
        RowBox[{"L", "^", "8"}]}], "/", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"L", "+", "1"}], ")"}], "^", "4"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"term2", ":=", 
   RowBox[{"4", "*", 
    RowBox[{"s", "^", "4"}], "*", 
    RowBox[{"mm", "^", "2"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", "*", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"H", "[", 
            RowBox[{"L", "+", "1"}], "]"}], "^", "2"}], "/", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"L", "+", "2"}], ")"}], "^", "2"}]}], "/", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"L", "+", "1"}], ")"}], "^", "5"}]}], "/", 
        RowBox[{"L", "^", "2"}]}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"11", "*", 
          RowBox[{"L", "^", "4"}]}], "+", 
         RowBox[{"22", "*", 
          RowBox[{"L", "^", "3"}]}], "+", 
         RowBox[{"31", "*", 
          RowBox[{"L", "^", "2"}]}], "+", 
         RowBox[{"20", "*", "L"}], "+", "6"}], ")"}], "*", 
       RowBox[{"H", "[", "L", "]"}], "*", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"H", "[", 
            RowBox[{"L", "+", "1"}], "]"}], "/", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"L", "-", "1"}], ")"}], "^", "2"}]}], "/", 
          RowBox[{"L", "^", "5"}]}], "/", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"L", "+", "1"}], ")"}], "^", "5"}]}], "/", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"L", "+", "2"}], ")"}], "^", "2"}]}]}], "-", 
      RowBox[{"3", "*", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"H", "[", "L", "]"}], "^", "2"}], "/", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"L", "-", "1"}], ")"}], "^", "2"}]}], "/", 
         RowBox[{"L", "^", "5"}]}], "/", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"L", "+", "1"}], ")"}], "^", "2"}]}]}], "+", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"3", "*", 
             RowBox[{"L", "^", "2"}]}], "-", 
            RowBox[{"8", "*", "L"}], "+", "6"}], ")"}], "*", 
          RowBox[{"H", "[", "L", "]"}], "*", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"H", "[", 
                RowBox[{"L", "-", "1"}], "]"}], "/", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"L", "-", "2"}], ")"}], "^", "2"}]}], "/", 
              RowBox[{"(", 
               RowBox[{"L", "-", "1"}], ")"}]}], "/", 
             RowBox[{"(", 
              RowBox[{"L", "-", 
               RowBox[{"1", "/", "2"}]}], ")"}]}], "/", 
            RowBox[{"L", "^", "5"}]}], "/", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"L", "+", "1"}], ")"}], "^", "2"}]}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"3", "*", 
             RowBox[{"L", "^", "2"}]}], "+", 
            RowBox[{"14", "*", "L"}], "+", "17"}], ")"}], "*", 
          RowBox[{"H", "[", 
           RowBox[{"L", "+", "1"}], "]"}], "*", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"H", "[", 
                RowBox[{"L", "+", "2"}], "]"}], "/", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"L", "+", "3"}], ")"}], "^", "2"}]}], "/", 
              RowBox[{"(", 
               RowBox[{"L", "+", "2"}], ")"}]}], "/", 
             RowBox[{"(", 
              RowBox[{"L", "+", 
               RowBox[{"3", "/", "2"}]}], ")"}]}], "/", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"L", "+", "1"}], ")"}], "^", "5"}]}], "/", 
           RowBox[{"L", "^", "2"}]}]}]}], ")"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"term3", ":=", 
   RowBox[{
    RowBox[{"1", "/", "4"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "*", 
       RowBox[{
        RowBox[{
         RowBox[{"H", "[", 
          RowBox[{"L", "+", "1"}], "]"}], "^", "3"}], "/", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"L", "+", "1"}], ")"}], "^", "2"}]}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "*", 
          RowBox[{"L", "^", "2"}]}], "+", 
         RowBox[{"4", "*", "L"}], "+", "3"}], ")"}], "*", 
       RowBox[{
        RowBox[{"H", "[", "L", "]"}], "^", "2"}], "*", 
       RowBox[{
        RowBox[{
         RowBox[{"H", "[", 
          RowBox[{"L", "+", "1"}], "]"}], "/", 
         RowBox[{"L", "^", "2"}]}], "/", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"L", "+", "1"}], ")"}], "^", "2"}]}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "*", 
          RowBox[{"L", "^", "2"}]}], "+", "1"}], ")"}], "*", 
       RowBox[{
        RowBox[{"H", "[", 
         RowBox[{"L", "+", "1"}], "]"}], "^", "2"}], "*", 
       RowBox[{
        RowBox[{
         RowBox[{"H", "[", "L", "]"}], "/", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"L", "+", "1"}], ")"}], "^", "2"}]}], "/", 
        RowBox[{"L", "^", "2"}]}]}], "-", 
      RowBox[{"2", "*", 
       RowBox[{
        RowBox[{
         RowBox[{"H", "[", "L", "]"}], "^", "3"}], "/", 
        RowBox[{"L", "^", "2"}]}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"L", "+", "2"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", "*", 
          RowBox[{"L", "^", "2"}]}], "+", 
         RowBox[{"2", "*", "L"}], "-", "3"}], ")"}], "*", 
       RowBox[{"H", "[", "L", "]"}], "*", 
       RowBox[{"H", "[", 
        RowBox[{"L", "+", "1"}], "]"}], "*", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"H", "[", 
            RowBox[{"L", "+", "2"}], "]"}], "/", "4"}], "/", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"L", "+", 
             RowBox[{"3", "/", "2"}]}], ")"}], "^", "2"}]}], "/", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"L", "+", "1"}], ")"}], "^", "2"}]}], "/", "L"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"L", "-", "1"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", "*", 
          RowBox[{"L", "^", "2"}]}], "+", 
         RowBox[{"4", "*", "L"}], "-", "2"}], ")"}], "*", 
       RowBox[{"H", "[", 
        RowBox[{"L", "+", "1"}], "]"}], "*", 
       RowBox[{"H", "[", "L", "]"}], "*", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"H", "[", 
            RowBox[{"L", "-", "1"}], "]"}], "/", "4"}], "/", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"L", "-", 
             RowBox[{"1", "/", "2"}]}], ")"}], "^", "2"}]}], "/", 
         RowBox[{"L", "^", "2"}]}], "/", 
        RowBox[{"(", 
         RowBox[{"L", "+", "1"}], ")"}]}]}], "+", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"L", "+", "2"}], ")"}], "^", "2"}], "*", 
       RowBox[{
        RowBox[{"H", "[", 
         RowBox[{"L", "+", "2"}], "]"}], "^", "2"}], "*", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"H", "[", 
           RowBox[{"L", "+", "1"}], "]"}], "/", "4"}], "/", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"L", "+", 
            RowBox[{"3", "/", "2"}]}], ")"}], "^", "2"}]}], "/", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"L", "+", "1"}], ")"}], "^", "2"}]}]}], "-", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"L", "-", "1"}], ")"}], "^", "2"}], "*", 
       RowBox[{
        RowBox[{"H", "[", 
         RowBox[{"L", "-", "1"}], "]"}], "^", "2"}], "*", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"H", "[", "L", "]"}], "/", "4"}], "/", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"L", "-", 
            RowBox[{"1", "/", "2"}]}], ")"}], "^", "2"}]}], "/", 
        RowBox[{"L", "^", "2"}]}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"L", "-", "1"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"7", "*", "L"}], "-", "3"}], ")"}], "*", 
       RowBox[{
        RowBox[{"H", "[", "L", "]"}], "^", "2"}], "*", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"H", "[", 
           RowBox[{"L", "-", "1"}], "]"}], "/", "4"}], "/", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"L", "-", 
            RowBox[{"1", "/", "2"}]}], ")"}], "^", "2"}]}], "/", 
        RowBox[{"L", "^", "2"}]}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"L", "+", "2"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"7", "*", "L"}], "+", "10"}], ")"}], "*", 
       RowBox[{
        RowBox[{"H", "[", 
         RowBox[{"L", "+", "1"}], "]"}], "^", "2"}], "*", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"H", "[", 
           RowBox[{"L", "+", "2"}], "]"}], "/", "4"}], "/", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"L", "+", 
            RowBox[{"3", "/", "2"}]}], ")"}], "^", "2"}]}], "/", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"L", "+", "1"}], ")"}], "^", "2"}]}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"L", "+", "3"}], ")"}], "*", 
       RowBox[{"H", "[", 
        RowBox[{"L", "+", "1"}], "]"}], "*", 
       RowBox[{"H", "[", 
        RowBox[{"L", "+", "2"}], "]"}], "*", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"H", "[", 
           RowBox[{"L", "+", "3"}], "]"}], "/", "12"}], "/", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"L", "+", 
            RowBox[{"3", "/", "2"}]}], ")"}], "^", "2"}]}], "/", 
        RowBox[{"(", 
         RowBox[{"L", "+", "1"}], ")"}]}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"L", "-", "2"}], ")"}], "*", 
       RowBox[{"H", "[", "L", "]"}], "*", 
       RowBox[{"H", "[", 
        RowBox[{"L", "-", "1"}], "]"}], "*", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"H", "[", 
           RowBox[{"L", "-", "2"}], "]"}], "/", "12"}], "/", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"L", "-", 
            RowBox[{"1", "/", "2"}]}], ")"}], "^", "2"}]}], "/", "L"}]}]}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f6", ":=", 
    RowBox[{"term1", "+", "term2", "+", "term3"}]}], ";"}], "\n", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Elm", ":=", 
   RowBox[{
    RowBox[{"N", "[", "f0", "]"}], "+", 
    RowBox[{
     RowBox[{"N", "[", "f1", "]"}], "*", "a", "*", "w"}], "+", 
    RowBox[{
     RowBox[{"N", "[", "f2", "]"}], "*", 
     RowBox[{"a", "^", "2"}], "*", 
     RowBox[{"w", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"N", "[", "f3", "]"}], "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"a", "*", "w"}], ")"}], "^", "3"}]}], "+", 
    RowBox[{
     RowBox[{"N", "[", "f4", "]"}], "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"a", "*", "w"}], ")"}], "^", "4"}]}], "+", 
    RowBox[{
     RowBox[{"N", "[", "f5", "]"}], "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"a", "*", "w"}], ")"}], "^", "5"}]}], "+", 
    RowBox[{
     RowBox[{"N", "[", "f6", "]"}], "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"a", "*", "w"}], ")"}], "^", "6"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]", ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"-", "2"}], ")"}]}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "1"}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"a", "^", "2"}], "*", 
     RowBox[{"w", "^", "2"}]}], "+", "Elm"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]0", ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "1"}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"a", "^", "2"}], "*", 
     RowBox[{"w", "^", "2"}]}], "+", "Elm"}]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "this", " ", "is", " ", "the", " ", "\[Lambda]", " ", "for", " ", "s"}], 
     "=", "2"}], ",", " ", 
    RowBox[{"useful", " ", "for", " ", "CC"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**", "**", "**", "**", "**", "**"}], "*", " ", "ODE",
     " ", 
    RowBox[{
    "functions", " ", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**"}]}], "******)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Tri", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"r", "^", "2"}], "-", 
    RowBox[{"2", "*", "M", "*", "r"}], "+", 
    RowBox[{"a", "^", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x", "[", "r_", "]"}], ":=", 
   RowBox[{"r", "+", 
    RowBox[{"2", "*", 
     RowBox[{"M", "/", 
      RowBox[{"(", 
       RowBox[{"rp", "-", "rm"}], ")"}]}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"rp", "*", 
        RowBox[{"Log", "[", 
         RowBox[{"r", "-", "rp"}], "]"}]}], "-", 
       RowBox[{"rm", "*", 
        RowBox[{"Log", "[", 
         RowBox[{"r", "-", "rm"}], "]"}]}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"k", "=", 
    RowBox[{"w", "-", 
     RowBox[{"m", "*", "Omega"}]}]}], ";"}], "\n", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"A", "[", "r_", "]"}], ":=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"s", "+", "1"}], ")"}]}], 
     RowBox[{
      RowBox[{
       RowBox[{"Tri", "'"}], "[", "r", "]"}], "/", 
      RowBox[{"Tri", "[", "r", "]"}]}]}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"B", "[", "r_", "]"}], ":=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"r", "^", "2"}], "+", 
            RowBox[{"a", "^", "2"}]}], ")"}], "^", "2"}], "*", 
         RowBox[{"w", "^", "2"}]}], " ", "-", " ", 
        RowBox[{"4", " ", "a", " ", "M", " ", "r", " ", "w", " ", "m"}], " ", 
        "+", " ", 
        RowBox[{
         RowBox[{"a", "^", "2"}], "*", 
         RowBox[{"m", "^", "2"}]}], " ", "+", " ", 
        RowBox[{"2", " ", "I", " ", "a", " ", 
         RowBox[{"(", 
          RowBox[{"r", "-", "M"}], ")"}], " ", "m", " ", "s"}], " ", "-", " ", 
        RowBox[{"2", " ", "I", " ", "M", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", "^", "2"}], "-", 
           RowBox[{"a", "^", "2"}]}], ")"}], " ", "w", " ", "s"}], " ", "+", 
        " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "I", " ", "r", " ", "w", " ", "s"}], "-", 
           "\[Lambda]"}], ")"}], " ", 
         RowBox[{"Tri", "[", "r", "]"}]}]}], ")"}]}], "/", 
     RowBox[{
      RowBox[{"Tri", "[", "r", "]"}], "^", "2"}]}]}], ";"}], "\n", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Rhor", "[", "r_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"Tri", "[", "r", "]"}], "^", 
      RowBox[{"(", 
       RowBox[{"-", "s"}], ")"}]}], "*", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "I"}], "*", "k", "*", 
       RowBox[{"x", "[", "r", "]"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"QQ", "=", 
   RowBox[{
    RowBox[{"2", "*", 
     RowBox[{"(", 
      RowBox[{"2", "+", "1"}], ")"}]}], "+", "\[Lambda]0", "-", 
    RowBox[{"2", "*", "a", "*", "m", "*", "w"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CC", "=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"QQ", "^", "2"}], "+", 
        RowBox[{"4", "*", "a", "*", "m", "*", "w"}], "-", 
        RowBox[{"4", "*", 
         RowBox[{"a", "^", "2"}], "*", 
         RowBox[{"w", "^", "2"}]}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"QQ", "-", "2"}], ")"}], "^", "2"}], "+", 
        RowBox[{"36", "*", "a", "*", "m", "*", "w"}], "-", 
        RowBox[{"36", "*", 
         RowBox[{"a", "^", "2"}], "*", 
         RowBox[{"w", "^", "2"}]}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "*", "QQ"}], "-", "1"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"96", "*", 
         RowBox[{"a", "^", "2"}], "*", 
         RowBox[{"w", "^", "2"}]}], "-", 
        RowBox[{"48", "*", "a", "*", "w", "*", "m"}]}], ")"}]}], "+", 
     RowBox[{"144", "*", 
      RowBox[{"w", "^", "2"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"M", "^", "2"}], "-", 
        RowBox[{"a", "^", "2"}]}], ")"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list1", "=", 
   RowBox[{"startw", "+", 
    RowBox[{"dMw", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", "Nw"}], "]"}], "-", "1"}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list3", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"y", ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "1", ",", "Nw"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.676803973922063*^9, {3.676804150804831*^9, 3.6768041679684963`*^9}, {
   3.676804391735875*^9, 3.676804392296417*^9}, {3.676804513706409*^9, 
   3.676804530105798*^9}, 3.6768051927011147`*^9, {3.676806001398768*^9, 
   3.6768060287602663`*^9}, 3.676806060266127*^9, {3.676806933541931*^9, 
   3.676806995764889*^9}, {3.676807028234108*^9, 3.676807029445499*^9}, {
   3.676811062246641*^9, 3.6768110633779078`*^9}, 3.676811223538279*^9, {
   3.731256553001573*^9, 3.7312565624959784`*^9}, {3.74268886786722*^9, 
   3.7426888928982573`*^9}, {3.742688933064703*^9, 3.742688956969222*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**", "**", "**", "**", "**", " ", "Use"}], " ", "R", 
    " ", "to", " ", "get", " ", 
    RowBox[{"A", " ", "**", "**", "**", "**", "**", "**"}]}], "******)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"rm", "=", 
     RowBox[{
      RowBox[{"M", "^", "2"}], "*", 
      RowBox[{"astar", "^", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", "Nw"}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Mw", "=", 
       RowBox[{"startw", "+", 
        RowBox[{"dMw", "*", 
         RowBox[{"(", 
          RowBox[{"i", "-", "1"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"w", "=", 
       RowBox[{"Mw", "/", "M"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"thermal", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"solR2", "=", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Rm", "''"}], "[", "r", "]"}], "==", 
            RowBox[{
             RowBox[{
              RowBox[{"A", "[", "r", "]"}], "*", 
              RowBox[{
               RowBox[{"Rm", "'"}], "[", "r", "]"}]}], "+", 
             RowBox[{
              RowBox[{"B", "[", "r", "]"}], "*", 
              RowBox[{"Rm", "[", "r", "]"}]}]}]}], ",", 
           RowBox[{
            RowBox[{"Rm", "[", "r0", "]"}], "\[Equal]", 
            RowBox[{"Rhor", "[", "r0", "]"}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Rm", "'"}], "[", "r0", "]"}], "\[Equal]", 
            RowBox[{
             RowBox[{"Rhor", "'"}], "[", "r0", "]"}]}]}], "}"}], ",", "Rm", 
         ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "r0", ",", "rmax"}], "}"}], ",", 
         RowBox[{"StartingStepSize", "\[Rule]", "startstep"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", "\"\<StiffnessSwitching\>\"", "}"}]}], ",", 
         RowBox[{"AccuracyGoal", "\[Rule]", "10"}], ",", 
         RowBox[{"MaxSteps", "\[Rule]", "numsteps"}], ",", 
         RowBox[{"MaxStepSize", "\[Rule]", "stepmax"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"\[Epsilon]", "=", 
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"M", "^", "2"}], "-", 
          RowBox[{"a", "^", "2"}]}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{"4", "*", "M"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"list3", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "=", 
       RowBox[{"thermal", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"128", "*", "w", "*", "k", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"k", "^", "2"}], "+", 
             RowBox[{"4", "*", 
              RowBox[{"\[Epsilon]", "^", "2"}]}]}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"k", "^", "2"}], "+", 
             RowBox[{"16", "*", 
              RowBox[{"\[Epsilon]", "^", "2"}]}]}], ")"}], "*", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "M"}], ")"}], "^", "5"}], "/", 
            RowBox[{"CC", "^", "2"}]}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{"2", "*", 
               RowBox[{"w", "^", "2"}]}], ")"}]}], "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"1", "/", 
                RowBox[{"rmax", "^", "3"}]}], "*", 
               RowBox[{"Abs", "[", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{
                  RowBox[{"Rm", "[", "rmax", "]"}], "/.", "solR2"}], "]"}], 
                "]"}]}], ")"}], "^", "2"}]}], "+", 
           RowBox[{"128", "*", "w", "*", "k", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"k", "^", "2"}], "+", 
              RowBox[{"4", "*", 
               RowBox[{"\[Epsilon]", "^", "2"}]}]}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"k", "^", "2"}], "+", 
              RowBox[{"16", "*", 
               RowBox[{"\[Epsilon]", "^", "2"}]}]}], ")"}], "*", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "*", "M"}], ")"}], "^", "5"}], "/", 
             RowBox[{"CC", "^", "2"}]}]}]}], ")"}]}]}]}], ";"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.67681113122605*^9, 3.676811131598873*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Rm", "[", "r", "]"}], "/.", "solR2"}], "]"}], "/", 
    SuperscriptBox["r", "3"]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "r0", ",", "rmax"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7312565867645407`*^9, 3.731256693009039*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
PcI84+gTLt5PfvAv1ZRnBr8vLh2lj775wc40wWTM3/i9sSbP+MGxzYK6mNOp
n2e2svlDnf3NXrQEa+LSwCp/+Hb8JAn96OwfSBH0h8V/lWVo10zOkd0b/cHF
SjfhN34PrvKf+b3FH66uTXVDF5WJK99Q9ofTn36rovfXyPU46PjDrX8X5Wbx
+9moShMw9gem8xlbdNILfclmC38I1e98i33lPtMnYUf8QchzZQHmXUO2XopO
/qCt+HPzHH6vvjvwDnr7g3NQVgnmwrNet9ND/CFmOIEX8zp28lHTSH9w0rDp
Qh/nYfz9c8ofoudzzqHnuTQamef8IemYaho6k300btVlfxg94RszT1jzb45Z
SqE/MKrSbdFdv235hG75Q9Hw811o0s+VPZfr/cF91a6df/B9+n7/okyLP/Te
TRFEl/4X5HDjlT/kj5j8xP7+ITlp1QF/4JK+8w3zLwMD/9WM+MNReXonOu51
aqnhpD+sn9iah5bpNAls/uMPK68/uLyA78fzPxoWnAHw5OefJLRjS+V8F18A
vP0uZIlefOT20E4sAKpeL+7/i/u1XjRmUDYAahMH9qJ3VneYeioHQPGU0yz2
e2/G8PzQCYAZRcUpzENKd3aS9wRA6JzpX7RA4XjGglUA1F1uzUVX5l21Z9kF
gNuYS9YiYcvso1LcbgEwXBZbif6WwfM5JSAAGh8/MEUnpDYWC9ECIJ1j0uAf
nneJFP+cmAAwbI1xRjfHKajJJgeAKPvwBPZdowd/37gYABL7FwcxZ6dn1KsW
BMBd/vcCbPrE3wehZtG15QHgyUnJxFwvkM0EagNg+jqdifkbn7vcLY8DINrW
sAFNdffusGgPgOXSGgboDU6S6d19AXBgrYPkMsJ37LuP2n8KgP3/dXqhrQ+f
3jj0PQBygx8MYn/8gMGQ52wAiOi01GDefC2si7KMBH/uivCxE14v3a1xj5ME
V1/9YWHumquUubiaBE9ip60wv73x9LwRPwn6yw/fQbNf+nQ8dgMJgijSW9DW
wgYPn4qRoDl28TM693zmpjWbSNATpX5kOeEfAr9YVltIcHFH4FPMDVIsRs5t
J8EnviYa5md5ikx7lUmQFiE6ix5IYL8hokmCXJcfXujtK0/wnNAlAbe/Hg8H
YVpsdUAukGBq5ON5dCu7QOenPSRw+M1chRZm+KrLmZFgQKwoG+3xtznD+wAJ
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
VRbIGTXZY267go9f5ToLTlqKcWJufLe/s7eIWO9l4lJoDber6fQbLPC+Gu+B
/S3r/Q5vLmdBn13dGsyFmjSFn1ayYPb8ZiX0SjLbG7/bLPjVGRGM/TmZtkuC
VSwYN5EUxHy0O+1EbQ0LWu3e66LfxpyQPHmPBZKfcqOw/1yd+O/OAxYYVpiL
YH5/eCK/pIEFjmet96HL0+tcDzxmQVn7zBnsXzGO2TLTxAJTQwtJzFOmLL5c
esqCw0Exh9GMAqESo2csqN9xKnNpPQ4O+vz3ggUvdm+XxTxEdaOI40sWHCp8
5okO5TvW3NfJgpafN6uWzp/x9GDrHsJsEvNo2vOXUm2vWXDa3jgM+/SSNe27
3rDARfTe96X9GG8afm+ABVKn6Z1opnvMVvUPLDiqWcXAfoxxQ0/pIAtYlSaK
6LjNC0zZYRbEtRjew/5pNm3lnBFiPyf/pWCe+D743YavxPq5anigk+orEpLH
iPffbOV97KdkjWmtHCfm/7LWDvNzVLnPjAkWsK99koxOP+xybu4nC16XzS/t
/wvqVwyDponzUD3tfyWWdzzX3xfHzVIilRUqyV7JSiWdSmiQ0vpGNGRkJFJR
Vn32QkhJNCRKiiQiIakkShoo2QopikT4vc/9/fl8vF6fz/vec8953WuEetLs
pr6eP2dgzqnz15CTf8onHRil9nPdRAo5pWar7ad/Z8CI/YL0x+Uswe9tk2eg
Oyc6C/kqp+rKK2Ea9M5p34h83WvKZhsxGvjmf+7B72XYrPlXMoUGlYGLMlC/
qR6euXQaDZ4fnMlCzhJ5uOOuJA2UZyZ1of9Oy5CojjQNXtY1C1DPLVmSc0WG
BmWHfuQh5yX7uSrNocFKzZRx9OeHZkrGydGo966TB+oFuzoLJBVpcE4svxr5
oflCD5oSDS59jtIn/SS7Z864Cg3qlKeQ/isdPF8avIAGP7OH3iOXv673619I
A7O+RG/kimwZZU91GpzsqVdCruRtev5FkwYSF72J//khVvAuHRq8PuF4A/ml
XYXaGz0a6NxPl0Gu0RR6vd6QBiFTvMqQX4tZhpUb0aBdyOQjcl3bcd0VJjTY
HJu4EPld6b0P98xocGTRwovIH1N+0PQtaFDxaOdv5MZTesbXl9Ng8MZjUu9P
uz2/zFtJAy+DWYeRmy2u8c6tosGPFE0hW4pb5L8sm7mGBgedrzBQb/+t1M20
poFNgz75fVfdjnghWxrE/folgv6vd8+uDllPg6Nuy5+SeRXU9A9spMGr9E2k
Xn2+05MPOdCgQGvnIHL/Bpv17Y40kH+a8Rd5QPv0sLMTDWwdRWyQf08puVa/
nQbbnD7UIA93/HW030UD5kZ7JfzeSLnZxNPdNChf/e8Q6mOXj9yy2kODy853
ryJPhN/e9cCNBmq6G7TRL7Tnm7jRfhp0q88k/SqyQuNehjsNFvcUnkQWm7tv
70JPGvxuKjNA/5Q/yVJJ3jR4+re3FfVp7z4+nO1L9dsDLumX8uv/DYb7U/2z
/PN89Icea9TpDaDB3OqTC5CNbZ337QyiwdUmcX9SD4VP558E0yDgnvNP0v9f
XV4vPkGDt4+z1qLfufDz1ORQGjSfqbyEuizHdZVEGA2mKXbkI1fv/nLsaAQN
PNqbHNBP09ub3RJFA81fG7tQt/zX0rmJRoPdr2bxSf2q980rZNDAxeCdLfpv
X2rbpsGm+iWkmuzPw/8AL5ZLg2x5Oyb656/qeDLOp4G9v9NC1N/PPDjmHUOD
Fz26LsiClk7j92dpkDjN6xb6bXI8Dq1JoMEzJ+evpN5R3VeyE6l6LT3mi/78
rV4NSknUPBfE9aN+eNE3GWYyDcLzGsl+tH972/1KoYHVfCM/0m8VPRFuV2hw
ffHiZcjnE3wevLxGA6XsTWnod/To61+aToMk43+bUZdY6qeZlkGDtsHJAOTS
qf17ZG5ReZGQVoT+Ex/9E07dpkHD3lmkX5Zk/qj+eocGF09NspB7QgLEtudS
9Zec/4ecx4aBFWV51HwuX92OvFs5MMjgATUvr34K0D+7b/DmhUKqXm3Wa5Cr
ioPaxItpoL92Hun30/zfcwNLqP5Re3kS9eWuwVuaS2nQ983sNPIvw2HWhic0
kN5iUEvya/JYaf5TGpRoum9E3f31nz9qz6n/S6m4hqxy5cTi6CrqvDO/knms
P/LXY6yaBv13n85C5q0JTfGspeYrJvU2svWcsXdv31D5GPp2PfK/9pNSUE+D
BTIR3/B79/P+WWe9p0Fpg2Ya6v70sFOKDTQQJNZHI2vumLhHa6LBgK4B6adm
zYjen59pIGbhQPZz7s+k2p4WGiTv5RYhOzyP3P2ijQZ2r2JnkHm5IHzWrJMG
URJJq5FLvE+/uNJNAx/BvCrk48tFhaV7aCB06pEjspEkzSK0jwZ3NFaQ/Xxt
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.32705},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->NCache[{{
      Rational[10001, 10000], 1000}, {1.327071544856626, 
     1.3274673535374153`}}, {{1.0001, 1000}, {1.327071544856626, 
     1.3274673535374153`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7312566251986427`*^9, 3.731256694201277*^9}}]
}, Open  ]]
},
WindowSize->{1309, 744},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.2 for Linux x86 (64-bit) (July 29, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 34640, 1095, 2057, "Input"],
Cell[35200, 1117, 4756, 126, 319, "Input"],
Cell[CellGroupData[{
Cell[39981, 1247, 357, 10, 37, "Input"],
Cell[40341, 1259, 43553, 726, 232, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
